<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>Dialog</class>
 <widget class="QDialog" name="Dialog">
  <property name="windowModality">
   <enum>Qt::WindowModal</enum>
  </property>
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>500</width>
    <height>400</height>
   </rect>
  </property>
  <property name="minimumSize">
   <size>
    <width>500</width>
    <height>400</height>
   </size>
  </property>
  <property name="maximumSize">
   <size>
    <width>500</width>
    <height>400</height>
   </size>
  </property>
  <property name="windowTitle">
   <string>Atencion</string>
  </property>
  <property name="styleSheet">
   <string notr="true">/*
 *
 *  Simple Stylesheet inspired on Bootstrap for Qt Designer / Qt Creator 
 *  File: bootstylesheet.css
 *  Author: JuanLoaiza007
 *  Version: 1.1.0
 *
 */

/*  # Español
 *  Instrucciones para aplicar en Qt Designer / Qt Creator
 *  1. Busque la vista de Inspector de objetos &gt;&gt; Objeto &gt;&gt; &quot;MainWindow&quot;.
 *  2. Dale clic derecho a &quot;MainWindow&quot; y seleccione &quot;Cambiar HojaDeEstilos&quot; o algo similar.
 *  3. Pegue el contenido de este archivo ahí.
 *  4. De clic en Aplicar y Aceptar.
 *  5. Para aplicar los estilos seleccione un objeto, en el Editor de Propiedades agregue un Filtro tipo cadena de texto y nombrelo &quot;class&quot;.
 *  6. En el Editor de Propiedades habrá una seccion nueva llamada &quot;Propiedades dinámicas&quot; y una propiedad llamada &quot;class&quot;, en la casilla de la derecha aplique todos los estilos que desee, eg. &quot;btn btn-outline-primary br-4&quot;. 
 */

/*  # English
 *  Instructions to apply in Qt Designer / Qt Creator
 *  1. Keep an eye on the Object Inspector &gt;&gt; Object &gt;&gt; &quot;MainWindow&quot;.
 *  2. Right click on &quot;MainWindow&quot; and select &quot;Change StyleSheet&quot; or something similar.
 *  3. Paste the content of this file there.
 *  4. Click Apply and Accept.
 *  5. To apply the styles, select an object, in the Properties Editor add a Text String Filter and name it &quot;class&quot;.
 *  6. In the Property Editor there will be a new section called &quot;Dynamic Properties&quot; and a property called &quot;class&quot;, in the box on the right apply all the styles you want, eg. &quot;btn btn-outline-primary br-4&quot;. 
 */

QMainWindow {
  font-family: &quot;sans-serif&quot;;
}

/* Border Settings */
/* Border Side Weight */
.b-st-1 {
  border-top: 1px solid;
}
.b-sb-1 {
  border-bottom: 1px solid;
}
.b-sl-1 {
  border-left: 1px solid;
}
.b-sr-1 {
  border-right: 1px solid;
}
.b-st-2 {
  border-top: 2px solid;
}
.b-sb-2 {
  border-bottom: 2px solid;
}
.b-sl-2 {
  border-left: 2px solid;
}
.b-sr-2 {
  border-right: 2px solid;
}
.b-st-3 {
  border-top: 3px solid;
}
.b-sb-3 {
  border-bottom: 3px solid;
}
.b-sl-3 {
  border-left: 3px solid;
}
.b-sr-3 {
  border-right: 3px solid;
}
.b-st-4 {
  border-top: 4px solid;
}
.b-sb-4 {
  border-bottom: 4px solid;
}
.b-sl-4 {
  border-left: 4px solid;
}
.b-sr-4 {
  border-right: 4px solid;
}

/* Radius */
.br-1 {
  border-radius: 10px;
}

.br-2 {
  border-radius: 15px;
}

.br-3 {
  border-radius: 20px;
}

.br-4 {
  border-radius: 25px;
}

/* Background colors */
.background-white {
  background-color: white;
}
.background-light {
  background-color: #f8f9fa;
}
.background-black {
  background-color: black;
}
.background-primary {
  background-color: #0d6efd;
}
.background-success {
  background-color: #198754;
}
.background-warning {
  background-color: #ffc720;
}
.background-danger {
  background-color: #dc3545;
}

/* Colors */
.color-white {
  color: white;
}
.color-light {
  color: #f8f9fa;
}
.color-black {
  color: black;
}
.color-primary {
  color: #0d6efd;
}
.color-success {
  color: #198754;
}
.color-warning {
  color: #ffc720;
}
.color-danger {
  color: #dc3545;
}

/* Buttons */
QPushButton {
  font-weight: 500;
  color: white;
  background-color: gray;
  padding: 6px 12px;
  font-size: 18px;
  border-radius: 10px;
  border: 1px solid;
}

.btn {
  font-weight: 500;
  color: white;
  background-color: gray;
  padding: 6px 12px;
  font-size: 18px;
  border-radius: 10px;
  border: 1px solid;
}

.btn-primary {
  color: #fff;
  background-color: #0d6efd;
  border-color: #0d6efd;
}
.btn-primary:hover {
  color: #fff;
  background-color: #0b5ed7;
  border-color: #0a58ca;
}

.btn-secondary {
  color: #fff;
  background-color: #6c757d;
  border-color: #6c757d;
}
.btn-secondary:hover {
  color: #fff;
  background-color: #5c636a;
  border-color: #565e64;
}

.btn-success {
  color: #fff;
  background-color: #198754;
  border-color: #198754;
}
.btn-success:hover {
  color: #fff;
  background-color: #157347;
  border-color: #146c43;
}

.btn-warning {
  color: #000;
  background-color: #ffc107;
  border-color: #ffc107;
}
.btn-warning:hover {
  color: #000;
  background-color: #ffca2c;
  border-color: #ffc720;
}

.btn-danger {
  color: #fff;
  background-color: #dc3545;
  border-color: #dc3545;
}
.btn-danger:hover {
  color: #fff;
  background-color: #bb2d3b;
  border-color: #b02a37;
}

.btn-light {
  color: #000;
  background-color: #f8f9fa;
  border-color: #f8f9fa;
}
.btn-light:hover {
  color: #000;
  background-color: #f9fafb;
  border-color: #f9fafb;
}

.btn-dark {
  color: #fff;
  background-color: #212529;
  border-color: #212529;
}
.btn-dark:hover {
  color: #fff;
  background-color: #1c1f23;
  border-color: #1a1e21;
}

.btn-outline-primary {
  background-color: white;
  color: #0d6efd;
  border-color: #0d6efd;
}
.btn-outline-primary:hover {
  color: #fff;
  background-color: #0d6efd;
  border-color: #0d6efd;
}

.btn-outline-secondary {
  background-color: white;
  color: #6c757d;
  border-color: #6c757d;
}
.btn-outline-secondary:hover {
  color: #fff;
  background-color: #6c757d;
  border-color: #6c757d;
}

.btn-outline-success {
  background-color: white;
  color: #198754;
  border-color: #198754;
}
.btn-outline-success:hover {
  color: #fff;
  background-color: #198754;
  border-color: #198754;
}

.btn-outline-info {
  background-color: white;
  color: #0dcaf0;
  border-color: #0dcaf0;
}
.btn-outline-info:hover {
  color: #000;
  background-color: #0dcaf0;
}

.btn-outline-warning {
  background-color: white;
  color: #ffc107;
  border-color: #ffc107;
}
.btn-outline-warning:hover {
  color: #000;
  background-color: #ffc107;
  border-color: #ffc107;
}

.btn-outline-danger {
  background-color: white;
  color: #dc3545;
  border-color: #dc3545;
}
.btn-outline-danger:hover {
  color: #fff;
  background-color: #dc3545;
  border-color: #dc3545;
}

.btn-outline-light {
  background-color: #41464b;
  color: #f8f9fa;
  border-color: #f8f9fa;
}
.btn-outline-light:hover {
  color: #000;
  background-color: #f8f9fa;
  border-color: #f8f9fa;
}

.btn-outline-dark {
  background-color: white;
  color: #212529;
  border-color: #212529;
}
.btn-outline-dark:hover {
  color: #fff;
  background-color: #212529;
  border-color: #212529;
}

.btn-link {
  background-color: white;
  font-weight: 400;
  color: #0d6efd;
  text-decoration: underline;
}
.btn-link:hover {
  color: #0a58ca;
}

/* Title sizes */
QLabel {
  font-size: 22px;
}

.h1 {
  font-size: 42px;
}

.h2 {
  font-size: 36px;
}

.h3 {
  font-size: 32px;
}

.h4 {
  font-size: 28px;
}

.h5 {
  font-size: 22px;
}

.h6 {
  font-size: 18px;
}

/* Alerts */
.alert {
  border: 1px solid;
}

.alert-primary {
  color: #084298;
  background-color: #cfe2ff;
  border-color: #b6d4fe;
}
.alert-secondary {
  color: #41464b;
  background-color: #e2e3e5;
  border-color: #d3d6d8;
}
.alert-success {
  color: #0f5132;
  background-color: #d1e7dd;
  border-color: #badbcc;
}
.alert-info {
  color: #055160;
  background-color: #cff4fc;
  border-color: #b6effb;
}
.alert-warning {
  color: #664d03;
  background-color: #fff3cd;
  border-color: #ffecb5;
}
.alert-danger {
  color: #842029;
  background-color: #f8d7da;
  border-color: #f5c2c7;
}
.alert-light {
  color: #636464;
  background-color: #fefefe;
  border-color: #fdfdfe;
}
.alert-dark {
  color: #141619;
  background-color: #d3d3d4;
  border-color: #bcbebf;
}
</string>
  </property>
  <property name="modal">
   <bool>true</bool>
  </property>
  <property name="class" stdset="0">
   <string>background-light</string>
  </property>
  <layout class="QVBoxLayout" name="verticalLayout">
   <item>
    <widget class="QFrame" name="head">
     <property name="maximumSize">
      <size>
       <width>16777215</width>
       <height>60</height>
      </size>
     </property>
     <property name="frameShape">
      <enum>QFrame::NoFrame</enum>
     </property>
     <property name="frameShadow">
      <enum>QFrame::Raised</enum>
     </property>
     <layout class="QHBoxLayout" name="horizontalLayout">
      <item>
       <widget class="QLabel" name="lbl_title">
        <property name="text">
         <string>TextLabel</string>
        </property>
        <property name="alignment">
         <set>Qt::AlignCenter</set>
        </property>
        <property name="class" stdset="0">
         <string>h3 color-danger</string>
        </property>
       </widget>
      </item>
     </layout>
    </widget>
   </item>
   <item>
    <widget class="QFrame" name="body">
     <property name="frameShape">
      <enum>QFrame::NoFrame</enum>
     </property>
     <property name="frameShadow">
      <enum>QFrame::Raised</enum>
     </property>
     <layout class="QHBoxLayout" name="horizontalLayout_2">
      <item>
       <widget class="QLabel" name="lbl_body">
        <property name="text">
         <string>TextLabel</string>
        </property>
        <property name="alignment">
         <set>Qt::AlignCenter</set>
        </property>
        <property name="wordWrap">
         <bool>true</bool>
        </property>
        <property name="class" stdset="0">
         <string>h5</string>
        </property>
       </widget>
      </item>
     </layout>
    </widget>
   </item>
   <item>
    <widget class="QFrame" name="foot">
     <property name="maximumSize">
      <size>
       <width>16777215</width>
       <height>60</height>
      </size>
     </property>
     <property name="frameShape">
      <enum>QFrame::NoFrame</enum>
     </property>
     <property name="frameShadow">
      <enum>QFrame::Raised</enum>
     </property>
     <layout class="QHBoxLayout" name="horizontalLayout_3">
      <item>
       <widget class="QPushButton" name="btn_aceptar">
        <property name="maximumSize">
         <size>
          <width>140</width>
          <height>200</height>
         </size>
        </property>
        <property name="text">
         <string>Aceptar</string>
        </property>
        <property name="class" stdset="0">
         <string>btn-danger</string>
        </property>
       </widget>
      </item>
     </layout>
    </widget>
   </item>
  </layout>
 </widget>
 <resources/>
 <connections>
  <connection>
   <sender>btn_aceptar</sender>
   <signal>clicked()</signal>
   <receiver>Dialog</receiver>
   <slot>close()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>249</x>
     <y>359</y>
    </hint>
    <hint type="destinationlabel">
     <x>249</x>
     <y>199</y>
    </hint>
   </hints>
  </connection>
 </connections>
</ui>
